name: Code Quality & Linting

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy isort bandit safety
          # Install minimal dependencies for type checking
          pip install typer pyyaml toml types-PyYAML types-toml
      
      - name: Check code formatting with Black
        run: |
          echo "üé® Checking code formatting..."
          black --check --diff --color .
      
      - name: Check import sorting with isort
        run: |
          echo "üì¶ Checking import organization..."
          isort --check-only --diff --color .
      
      - name: Lint with flake8
        run: |
          echo "üîç Running flake8 linting..."
          # Critical errors
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Style and complexity warnings (non-blocking)
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      
      - name: Type check with mypy (non-blocking)
        run: |
          echo "üî¨ Running type checking..."
          mypy mcpctl/ --ignore-missing-imports || echo "‚ö†Ô∏è Type checking completed with warnings"
      
      - name: Security check with bandit (non-blocking)
        run: |
          echo "üîí Running security analysis..."
          bandit -r mcpctl/ -f json -o bandit-report.json || echo "‚ö†Ô∏è Security scan completed with warnings"
          bandit -r mcpctl/ --severity-level medium || echo "‚ö†Ô∏è Security issues found (non-blocking)"
      
      - name: Check for security vulnerabilities (non-blocking)
        run: |
          echo "üõ°Ô∏è Checking dependency vulnerabilities..."
          safety check --json --output safety-report.json || echo "‚ö†Ô∏è Dependency scan completed with warnings"
          echo "Security scan completed"
      
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json
