name: Cross-Platform Installation Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test detect-platform
        run: |
          chmod +x scripts/detect-platform.sh
          ./scripts/detect-platform.sh
      - name: Test platforms
        run: |
          chmod +x scripts/test-platforms.sh  
          ./scripts/test-platforms.sh
      - name: Test assets
        run: |
          chmod +x scripts/test-release-assets.sh
          ./scripts/test-release-assets.sh v1.0.2

  test-platform-detection:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Test platform detection
        run: |
          chmod +x scripts/detect-platform.sh
          detected=$(./scripts/detect-platform.sh)
          echo "Runner: ${{ matrix.os }}"
          echo "System: $(uname -s) $(uname -m)"
          echo "Detected platform: $detected"
          
          # Verify the platform detection returns a valid format
          case "$detected" in
            macos-amd64|macos-arm64|linux-amd64|linux-arm64|windows-amd64)
              echo "✅ Valid platform detected: $detected"
              ;;
            *)
              echo "❌ Invalid platform format: $detected"
              echo "Expected one of: macos-amd64, macos-arm64, linux-amd64, linux-arm64, windows-amd64"
              exit 1
              ;;
          esac
